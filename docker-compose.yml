# compose.ymlの文法バージョンを定義
version: '3.9'

# 各サービス（コンテナ）を定義
services:
  django: #サービス名
      build: ./Docker/Django #Dockerfileから起動。Dockerfileの相対ファイルパスを指定
      command: uwsgi --socket :8000 --module app.wsgi --py-autoreload 1 --logto /tmp/mylog.log #コンテナ起動時に実行するコマンド
      volumes: #ホストOSのフォルダをdockerコンテナ内のフォルダに割当
        - ./src:/code # これだと、カレントディレクトリ内のsrcディレクトリ＝docker内の/codeディレクトリという形になる
        - ./static:/static
      expose: #docker内でのみ開放されるポートの設定。docker内の他のコンテナからのみアクセス可。ホストOSからはアクセス不可。
        - "8000"
      depends_on:
        db:
          # dbのヘルスチェックが終わってからdjangoを起動させる
          condition: service_healthy
          
  db:
      image: mysql:8.0 # イメージから起動
      platform: linux/amd64 #サービスが実行されるべきプラットフォーム（オペレーティングシステムとアーキテクチャ）を指定
      command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      ports:
        - "3306:3306" # ホストのポート：コンテナのポート
      environment: # コンテナ内で利用する環境変数の定義
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: chapter
        MYSQL_USER: user
        MYSQL_PASSWORD: password
        TZ: 'Asia/Tokyo'
      volumes:
        - ./mysql:/var/lib/mysql
        - ./sql:/docker-entrypoint-initdb.d
      # DBのコンテナのヘルスチェックを行う
      # mysqladmin(MySQLサーバーの管理を行うクライアントを使ってDBコンテナ自身(127.0.0.1)にpingを送ってヘルスチェックを行う
      healthcheck:
        test: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD
        # ヘルスチェックのインターバルは10秒
        interval: 10s
        # タイムアウト時間は10秒
        timeout: 10s
        # リトライ回数は3回
        retries: 3
        # ヘルスチェックが失敗しても無視する時間は30秒
        start_period: 30s

  nginx: # イメージから起動
      image: nginx:1.24.0
      ports:
        - "80:80"
      volumes:
        - ./Docker/Nginx/conf:/etc/nginx/conf.d
        - ./Docker/Nginx/uwsgi_params:/etc/nginx/uwsgi_params
        - ./static:/static
      depends_on:
        - django

